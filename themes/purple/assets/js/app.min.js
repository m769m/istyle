$(document).ready(function () {
    let width_path_catalog = $('.path-catalog h2').width() + 20;
    $('.path-catalog-two div:first-child').css('margin-left', width_path_catalog + 'px');
    
    if (width_path_catalog / window.innerWidth > 0.8) {
        $('.path-catalog-two div:first-child').css('margin-left', '0px');
    }
    // console.log(width_path_catalog);

    $(window).resize(function (e) {
        let width_path_catalog = $('.path-catalog h2').width() + 20;
        $('.path-catalog-two div:first-child').css('margin-left', width_path_catalog + 'px');

        if (width_path_catalog / e.target.innerWidth > 0.8) {
            $('.path-catalog-two div:first-child').css('margin-left', '0px');
        }
    });

    $(document).on('click', '.dropbox-toogle', function (e) {
        e.preventDefault();
        let hiddenClass = $(this).attr('data-hidden');
        let elem = $(this).attr('data-content');
        let click = $(this).attr('data-click');
        let rotateElem = $(this).attr('data-rotate');
        let outerHide = $(this).attr('data-outer-hide');
        let innerClickHide = $(this).attr('data-inner-hide');
        let innerClickAddText = $(this).attr('data-inner-hide-add-text');
        let innerClickAddTextClass = $(this).attr('data-inner-hide-add-text-class');
        let innerClickElemClass = $(this).attr('data-inner-hide-elem-class');
        let close = $(this).attr('data-close');
        if (close == "true" && close !== undefined) {
            $(".btn-filter-open").remove()
            $(this).append('<img class="btn-filter-open" src="/themes/purple/assets/images/close.svg" alt="filter">')
            $(this).attr('data-close', 'false');
        } else if (close == "false" && close !== undefined) {
            $(".btn-filter-open").remove()
            $(this).append('<img class="btn-filter-open" src="/themes/purple/assets/images/filter.svg" alt="filter">')
            $(this).addClass("border-radius-filter");
            $(this).attr('data-close', 'true');
        }

        if(click == '1') {
            $(this).attr('data-click', '0');
            $(elem).addClass(hiddenClass);
            
            if(typeof rotateElem !== typeof undefined && rotateElem !== false) {
                $(this).find(rotateElem).removeClass('rotate-180');
            }
        } else {
            $(this).attr('data-click', '1');
            $(elem).removeClass(hiddenClass);
            if(typeof rotateElem !== typeof undefined && rotateElem !== false) {
                $(this).find(rotateElem).addClass('rotate-180');
            }
            if(typeof outerHide !== typeof undefined && outerHide !== false && Number(outerHide) === 0) {
                return;
            }
            let dropbox = this;
            $(document).mouseup(function(mouseup){
                var div = $(elem);
                if(typeof innerClickHide !== typeof undefined && innerClickHide !== false) {
                    if($(mouseup.target).hasClass(innerClickElemClass)) {
                        if(typeof innerClickAddText !== typeof undefined && innerClickAddText !== false) {
                            let addText = $(mouseup.target).text();
                            $(dropbox).find('.'+innerClickAddTextClass).text(addText);
                        }
                        $(dropbox).attr('data-click', '0');
                        $(elem).addClass(hiddenClass);
                        if(typeof rotateElem !== typeof undefined && rotateElem !== false) {
                            $(dropbox).find(rotateElem).removeClass('rotate-180');
                        }
                        $(document).off(mouseup);
                    }
                }
                if(!div.is(mouseup.target) && div.has(mouseup.target).length === 0 && !$(dropbox).is(mouseup.target) && $(dropbox).has(mouseup.target).length === 0 ) {
                    $(dropbox).attr('data-click', '0');
                    $(elem).addClass(hiddenClass);
                    if(typeof rotateElem !== typeof undefined && rotateElem !== false) {
                        $(dropbox).find(rotateElem).removeClass('rotate-180');
                    }
                    $(document).off(mouseup);
                } else if($(dropbox).is(mouseup.target)) {
                    $(document).off(mouseup);
                }
            });
        }
    });

    $(document).on('click', '.close-header-dropbox', function (e) {
        e.preventDefault();
        let hiddenClass = $(this).attr('data-hidden');
        let elem = $(this).attr('data-content');
        $('.dropbox-toogle').attr('data-click', '0');
        $(elem).addClass(hiddenClass);
    });

    $(document).on('click', '.close-search-dropbox', function (e) {
        e.preventDefault();
        let hiddenClass = $(this).attr('data-hidden');
        let elem = $(this).attr('data-content');
        $('.dropbox-toogle').attr('data-click', '0');
        $(elem).addClass(hiddenClass);
    });

    $(document).on('click', '.dropbox-auth', function (e) {
        e.preventDefault();
        let hiddenClass = $(this).attr('data-hidden');
        let elem = $(this).attr('data-content');
        let el = $('.dropbox-toogle').attr('data-click', '0');
        $(elem).addClass(hiddenClass);
    });

    $('.change-list-item-js').on('click', function(){
        let parent = $(this).parent();
        let activeClassName = $(parent).attr('data-active-class');
        if($(this).hasClass(activeClassName)) {
            return;
        }
        let currentActive = $(parent).find('.'+activeClassName);
        $(currentActive).removeClass(activeClassName);
        $(this).addClass(activeClassName);
    });

    $(document).on('click', '#more_categories_toogle', function(e){
        e.preventDefault();
        if($(this).attr('data-open') === '1') {
            $(this).attr('data-open', '0');
            $('.landing-service-search__categories .additional-item.category-item').each(function(){
                $(this).addClass('hidden-item');
            });
            $('#rotate_toogle').removeClass('rotate-180');
            $('#more_categories_text').text($('#more_categories_text').attr('open-text'));
        } else {
            $(this).attr('data-open', '1');
            $('.landing-service-search__categories .additional-item.category-item.hidden-item').each(function(){
                $(this).removeClass('hidden-item');
            });
            $('#rotate_toogle').addClass('rotate-180');
            $('#more_categories_text').text($('#more_categories_text').attr('close-text'));
        }
        
    });

    $('.like-button').on('click', function(){
        let icon = $(this).find('i');
        let removeText = $(this).attr('data-remove-text');
        let addText = $(this).attr('data-add-text');
        let dataID = $(this).attr('data-id');
        let dataType = $(this).attr('data-type');
        let setText = false;
        let thisElem = this;
        
        if(addText !== false || typeof addText !== typeof undefined) {
            setText = true;
        }

        ajaxData = {};
        ajaxData['id'] = dataID;
        ajaxData['type'] = dataType;

        if($(thisElem).hasClass('active')) {
            ajaxData['action'] = 'delete';
        } else {
            ajaxData['action'] = 'add';
        }

        $.ajax({
            type: 'POST',
            data: ajaxData,
            dataType: 'json',
            url: '/api/favorite',
            success: function(response){
                if(response.status === 'error') {
                    statusBar(response.message);
                    console.log(response.message);
                    console.log(10);
                } else {
                    if($(thisElem).hasClass('active')) {
                        if(setText === true) {
                            $(thisElem).find('span').text(addText);
                        }
                        $(thisElem).removeClass('active');
                        $(icon).removeClass('fa-solid');
                        $(icon).addClass('fa-regular');
                    } else {
                        if(setText === true) {
                            $(thisElem).find('span').text(removeText);
                        }
                        $(thisElem).addClass('active');
                        $(icon).removeClass('fa-regular');
                        $(icon).addClass('fa-solid');
                    }
                }
            }
        });
    });

    $('.js-display-phone').on('click', function () {
        let fullPhone = $(this).parent().attr('data-phone');
        $(this).parent().html('<span class="bold">'+fullPhone+'</span>');
    });

    $('.slide-button').on('click', function(){
        let parent = $(this).parent();
        let slideImages = $(parent).find('.slide-images');
        let countSliders = $(slideImages).children('div').length;
        let currentSlide = $(slideImages).attr('data-current-slide');
        if(currentSlide === false || typeof currentSlide === typeof undefined)
            currentSlide = 1;

        let lastSlideNumber = Number($(slideImages).find('.slide-item:last').attr('data-slide'));
        let dataCountAttr = $(slideImages).attr('data-count');
        if(typeof dataCountAttr !== typeof undefined && dataCountAttr !== false) {
            lastSlideNumber = lastSlideNumber-Number(dataCountAttr)+1;
        }
        
        let newSlide = Number(currentSlide);
        if($(this).hasClass('slide-left')) {
            newSlide = newSlide-1;
        } else {
            newSlide = newSlide+1;
        }

        if(newSlide === 0) {
            newSlide = lastSlideNumber;
        } else if (newSlide > lastSlideNumber) {
            newSlide = 1;
        }

        let gap = 0;
        let gapAttr = $(slideImages).attr('data-gap');
        if(typeof gapAttr !== typeof undefined && gapAttr !== false) {
            gap = Number(gapAttr);
        }

        let newSlideElem = $(slideImages).find('.slide-item[data-slide='+newSlide+']');
        if(newSlideElem.length > 0) {
            let elemWidth = $(newSlideElem).outerWidth();
            let offset = elemWidth*(newSlide-1)+gap*(newSlide-1);

            $(slideImages).animate({ 
                    scrollLeft: offset
                }, 200
            );
            $(slideImages).attr('data-current-slide', newSlide);
            $('.current-slide').html(newSlide);
        }

        $('.all-slides').html(countSliders);
    });
    $('.input-charasters-count-js').on('input', function(){
        let countElem = $(this).attr('data-charasters-count');
        let count = $(this).val().length;
        $(countElem).text(count);
    });
});

function topup(topupElement, openButtonClass, activeClass = 'active', innerElemClass = 'topup-content-container', topupCloseButtonClass = 'topup-close-button')
{
    $('.'+openButtonClass).on('click', function(){
        $(topupElement).addClass(activeClass);
        $('.topup-change-z').removeClass('z99');
        $('.topup-change-z100').removeClass('z100');
        $(document).on('keydown', this, function (e) {
            var keycode = ((typeof e.keyCode != 'undefined' && e.keyCode) ? e.keyCode : e.which);
            if (keycode === 27) {
                $(topupElement).removeClass(activeClass);
                $('.topup-change-z').addClass('z99');
                $('.topup-change-z100').addClass('z100');
            };
        });
        $(topupElement).find('.'+topupCloseButtonClass).on('click', function(){
            $(topupElement).removeClass(activeClass);
            $('.topup-change-z').addClass('z99');
            $('.topup-change-z100').addClass('z100');
        });
        $(document).mouseup(function(e){ 
            var div = $(topupElement).find('.'+innerElemClass); 
            if (!div.is(e.target) && div.has(e.target).length === 0) {
                $(topupElement).removeClass(activeClass);
                $('.topup-change-z').addClass('z99');
                $('.topup-change-z100').addClass('z100');
            }
        });
    });
}


function statusBar(message, isError = true, activeClass = 'active', errorClass = 'error-message', barElem = '.status-bar', timeout = 3000)
{
    if($(barElem).hasClass(activeClass)) {
        return;
    }
    $(barElem).text(message);
    if(isError === true) {
        $(barElem).addClass(errorClass);
    }
    $(barElem).addClass(activeClass);
    setTimeout(function(){
        $(barElem).removeClass(activeClass);
        $(barElem).text('');
        if(isError === true) {
            $(barElem).removeClass(errorClass);
        }
    }, timeout);
}


function setRating(starElem = '.stars-rating .rating-star', greenStarClass = 'star-active', ratingValueElem = false, rateInputElem = '#review_rate_js')
{
    $(document).ready(function(){
        $(starElem).on('mouseover', function(){
            $(starElem).removeClass(greenStarClass);
            let id = Number($(this).attr('data-rate'));
            setCurrentRate(starElem, greenStarClass, id);
        });
        $(starElem).on('mouseout', function(){
            $(starElem).removeClass(greenStarClass);
            let currentRate = $(rateInputElem).val();
            if(currentRate) {
                setCurrentRate(starElem, greenStarClass, currentRate); 
            }
        });
        $(starElem).on('click', function(){
            let id = Number($(this).attr('data-rate'));
            let currentRate = Number($(rateInputElem).val());
            if(id === currentRate) {
                $(starElem).removeClass(greenStarClass);
                if(ratingValueElem !== false) {
                    $(ratingValueElem).text('');
                }
                $(rateInputElem).val('');
                return;
            }
            if(ratingValueElem !== false) {
                $(ratingValueElem).text(id);
            }
            $(rateInputElem).val(id);
            setCurrentRate(starElem, greenStarClass, id);
        });
    });
}

function setCurrentRate(starElem, greenStarClass, currentRate)
{
    while(currentRate > 0) {
        $(starElem+'[data-rate="'+currentRate+'"]').addClass(greenStarClass);
        currentRate--;
    }
}

function extractFilenamesFromInput(fileInputID, appendToElem, appendItemClass)
{
    $(fileInputID).on('input', function(){
        $(appendToElem).html('');
        let fileInputElem = $(fileInputID).prop('files');
        if(fileInputElem.length > 0) {
            Object.keys(fileInputElem).forEach(key => {
                $(appendToElem).append('<div class="'+appendItemClass+'">'+fileInputElem[key].name+'</div>');
            });
        }
    });
}
